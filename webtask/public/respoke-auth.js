
/* minified node-respoke-admin and dependencies. */

function isPromise(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof e.then}function nodeify(e,n){return"function"!=typeof n?e:e.then(function(e){nextTick(function(){n(null,e)})},function(e){nextTick(function(){n(e)})})}function nodeifyThis(e){return nodeify(this,e)}function extend(e){if(e&&isPromise(e)){e.nodeify=nodeifyThis;var n=e.then;return e.then=function(){return extend(n.apply(this,arguments))},e}"function"==typeof e?e.prototype.nodeify=nodeifyThis:Promise.prototype.nodeify=nodeifyThis}function NodeifyPromise(e){return this instanceof NodeifyPromise?(Promise.call(this,e),void extend(this)):new NodeifyPromise(e)}function pruneResponse(e){var n;return e?(n={headers:e.headers,statusCode:e.statusCode,body:e.body},e.request?(n.request={href:e.request.href,headers:e.request.headers},e.request.body?(n.request.body=e.request.body.toString(),n):n):n):e}function UnexpectedServerResponseError(e){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message="[respoke] unexpected response from server",this.res=pruneResponse(e),this.name="UnexpectedServerResponseError"}function NoAuthenticationTokens(){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message="[respoke] no authentication tokens",this.name="NoAuthenticationTokens"}function MissingEndpointIdAsAdmin(){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message="[respoke] no endpointId when connecting as admin",this.name="MissingEndpointIdAsAdmin"}function UnparseableResponse(){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message="[respoke] unable to parse response from server",this.name="UnparseableResponse"}function SocketErrorResponseFromServer(e){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message="[respoke] error returned from socket request",this.res=e,this.name="SocketErrorResponseFromServer"}function isOk(e){return e>=200&&300>e}function Client(e){var n=this;return events.EventEmitter.call(this),e=e||{},n.tokens={},n.tokens["Admin-Token"]=e["Admin-Token"]||null,n.tokens["App-Secret"]=e["App-Secret"]||null,n.tokens["App-Token"]=e["App-Token"]||null,n.appId=e.appId||null,n.connectionId=null,n.endpointId=null,n.baseURL=e.baseURL||"https://api.respoke.io/v1",n.socket=e.socket?e.socket:null,n.request=function(e,r){e=_.defaults(e||{},{json:!0,headers:n.tokens}),debug("request",e),request(e,r)},n.wsCall=function(e,r,o){var t={};n.tokens["App-Token"]?t["App-Token"]=n.tokens["App-Token"]:t=n.tokens;var s={url:n.baseURL+r,headers:t,data:o};return new Promise(function(o,t){debug("socket send "+e,s),n.socket.emit(e.toLowerCase(),JSON.stringify(s),function(s){try{s=JSON.parse(s)}catch(i){return debug("socket response error","could not be parsed as JSON",s),void t(new errors.UnparseableResponse)}return s&&s.error?(debug("socket response error",s),void t(new errors.SocketErrorResponseFromServer(s,e,r))):(debug("socket response ok",e,n.baseURL+r,typeof s,s),void o(s))})})},n.auth={},n.auth.endpoint=function(e,r){e=_.defaults(e||{},{appId:n.appId,endpointId:null,roleId:null,ttl:84600});var o={uri:n.baseURL+"/tokens",method:"POST",headers:e.headers,json:!0,body:e};return r?void nodeify(n.auth.endpoint(e),r):new Promise(function(r,t){return e.appId?e.endpointId?void n.request(o,function(e,n,o){return e?t(e):isOk(n.statusCode)?r(o):t(new errors.UnexpectedServerResponseError(n))}):t(new Error("Cannot authenticate endpoint when endpointId is "+e.endpointId)):t(new Error("Cannot authenticate endpoint when appId is "+e.appId))})},n.auth.sessionToken=function(e,r){return e=_.defaults(e||{},{tokenId:null}),r?void nodeify(n.auth.sessionToken(e),r):new Promise(function(r,o){return e.tokenId?void n.request({uri:n.baseURL+"/session-tokens",method:"POST",json:!0,headers:{},body:{tokenId:e.tokenId}},function(e,t,s){return e?o(e):isOk(t.statusCode)?(debug("session-tokens",s),n.tokens["App-Token"]=s.token,r(s)):o(new errors.UnexpectedServerResponseError(t))}):o(new Error("Cannot authenticate without tokenId"))})},n.auth.connect=function(e){if(e=_.defaults(e||{},{"Admin-Token":n.tokens["Admin-Token"],"App-Secret":n.tokens["App-Secret"],"App-Token":n.tokens["App-Token"],endpointId:null,connectParams:{"connect timeout":2e3,"force new connection":!0,"sync disconnect on unload":!0}}),debug("auth connect",e),!e["Admin-Token"]&&!e["App-Secret"]&&!e["App-Token"])return n.emit("error",new errors.NoAuthenticationTokens);var r=e["Admin-Token"]||e["App-Secret"];if(r&&!e.endpointId)return n.emit("error",new errors.MissingEndpointIdAsAdmin);var o={};e["App-Token"]?o["app-token"]=e["App-Token"]:e["App-Secret"]?o["app-secret"]=e["App-Secret"]:e["Admin-Token"]&&(o["admin-token"]=e["Admin-Token"]);var t={};e.endpointId&&(t.endpointId=e.endpointId),e.clientType&&(t.clientType=e.clientType);var s=url.parse(n.baseURL);s.pathname="",s.query=o;var i=url.format(s);n.socket||(debug("web socket connecting",i,e.connectParams),n.socket=io.connect(i,e.connectParams)),n.socket.on("connect",function(){debug("event connect",n.endpointId),n.wsCall("post","/connections",t).then(function(e){n.endpointId=e.endpointId,n.connectionId=e.id,n.emit("connect")},function(e){n.emit("error",e)})["catch"](function(e){process.nextTick(function(){throw e})})}),n.socket.on("disconnect",function(){debug("event disconnect",n.endpointId),n.emit("disconnect")}),n.socket.on("reconnect",function(e){debug("event reconnect",n.endpointId,e),n.emit("reconnect",e)}),n.socket.on("reconnecting",function(e){debug("event reconnecting",n.endpointId,e),n.emit("reconnecting",e)}),n.socket.on("error",function(e){debug("event error",n.endpointId,e),n.emit("error",e)}),n.socket.on("connect_error",function(e){debug("event connect_error",n.endpointId,e),n.emit("connect_error",e)}),n.socket.on("connect_timeout",function(){debug("event connect_timeout",n.endpointId),n.emit("connect_timeout")}),n.socket.on("message",function(e){debug("event message",n.endpointId,e),n.emit("message",e)}),n.socket.on("presence",function(e){debug("event presence",n.endpointId,e),n.emit("presence",e)}),n.socket.on("join",function(e){debug("event join",n.endpointId,e),e.header.groupId=e.header.channel,delete e.header.channel,n.emit("join",e)}),n.socket.on("leave",function(e){debug("event leave",n.endpointId,e),e.header.groupId=e.header.channel,delete e.header.channel,n.emit("leave",e)}),n.socket.on("pubsub",function(e){debug("event pubsub",n.endpointId,e),e.header.groupId=e.header.channel,delete e.header.channel,n.emit("pubsub",e)})},n.auth.admin=function(e,r){return r?void nodeify(n.auth.admin(e),r):new Promise(function(r,o){if(!e.username)return o(new Error("Cannot authenticate without username"));if(!e.password)return o(new Error("Cannot authenticate without password"));var t={uri:n.baseURL+"/adminsessions",method:"POST",json:!0,body:{username:e.username,password:e.password}};n.request(t,function(e,t,s){return e?o(e):isOk(t.statusCode)?(debug("admin session token",s),n.tokens["Admin-Token"]=s.token,r(s)):o(new errors.UnexpectedServerResponseError(t))})})},n.close=function(e){return e?void nodeify(n.close(),e):new Promise(function(e){n.socket.disconnect(),e()})},n.presence={},n.presence.observe=function(e,r){return r?void nodeify(n.presence.observe(e),r):n.wsCall("post","/presence-observers",{endpointList:e})},n.presence.set=function(e,r){if(r)return void nodeify(n.presence.set(e),r);var o={presence:{show:e.show||!0,status:e.status,type:e.presence||"available"}};return n.wsCall("post","/presence",o)},n.messages={},n.messages.send=function(e,r){return r?void nodeify(n.messages.send(e),r):(e=_.defaults(e||{},{type:"message",ccSelf:!0}),n.wsCall("post","/messages",e))},n.groups={},n.groups.publish=function(e,r){return r?void nodeify(n.groups.publish(e),r):e.groupId?n.wsCall("post","/channels/"+encodeURIComponent(e.groupId)+"/publish",{endpointId:e.endpointId||n.endpointId,message:e.message}):Promise.reject(new Error("Cannot send group message without groupId"))},n.groups.getSubscribers=function(e,r){return r?void nodeify(n.groups.getSubscribers(e),r):e.groupId?n.wsCall("get","/channels/"+encodeURIComponent(e.groupId)+"/subscribers",null):Promise.reject(new Error("Cannot get group members without groupId"))},n.groups.join=function(e,r){if(r)return void nodeify(n.groups.join(e),r);var o={endpointId:n.endpointId};return e.groupId?(e.connectionId&&(o.connectionId=e.connectionId),n.wsCall("post","/channels/"+encodeURIComponent(e.groupId)+"/subscribers",o)):Promise.reject(new Error("Cannot join group without groupId"))},n.groups.leave=function(e,r){if(r)return void nodeify(n.groups.leave(e),r);if(!e.groupId)return Promise.reject(new Error("Cannot leave group without groupId"));var o={endpointId:n.endpointId};return n.wsCall("delete","/channels/"+encodeURIComponent(e.groupId)+"/subscribers",o)},n.apps={},n.apps.get=function(e,r){return e instanceof Function&&!r&&(r=e,e={}),e=e||{},r?void nodeify(n.apps.get(e),r):new Promise(function(r,o){var t=_.defaults(e||{},{uri:n.baseURL+"/apps"+(e.appId?"/"+e.appId:""),method:"GET",headers:n.tokens});n.request(t,function(e,n,t){return e?o(e):isOk(n.statusCode)?r(t):o(new errors.UnexpectedServerResponseError(n))})})},n.roles={},n.roles.get=function(e,r){return e instanceof Function&&!r&&(r=e,e={}),e=e||{},r?void nodeify(n.roles.get(e),r):new Promise(function(r,o){if(!e.appId)return o(new Error("appId is required to retrieve roles"));var t=_.defaults(e||{},{uri:n.baseURL+"/roles"+(e.roleId?"/"+e.roleId:"")+"?appId="+e.appId,method:"GET",headers:e.headers});n.request(t,function(e,n,t){return e?o(e):isOk(n.statusCode)?r(t):o(new errors.UnexpectedServerResponseError(n))})})},n.roles.create=function(e,r,o){return e=e||{},r=r||{},r instanceof Function&&!o&&(o=r,r={}),o?void nodeify(n.roles.create(e,r),o):new Promise(function(o,t){if(!e.appId)return t(new Error("Cannot create role when appId is "+e.appId));if(!e.name)return t(new Error("Cannot create role when name is "+e.name));var s=_.defaults(r||{},{uri:n.baseURL+"/roles",method:"POST",headers:r.headers,body:e});n.request(s,function(e,n,r){return e?t(e):isOk(n.statusCode)?o(r):t(new errors.UnexpectedServerResponseError(n))})})},n.roles["delete"]=function(e,r){return e=e||{},r?void nodeify(n.roles["delete"](e),r):new Promise(function(r,o){if(!e.roleId)return o(new Error("Cannot delete role when roleId is "+e.roleId));var t={uri:n.baseURL+"/roles/"+e.roleId,method:"DELETE",headers:e.headers};n.request(t,function(e,n,t){return e?o(e):isOk(n.statusCode)?r(t):o(new errors.UnexpectedServerResponseError(n))})})},n}var Promise=require("promise"),nextTick;nextTick="function"==typeof setImediate?setImediate:"object"==typeof process&&process&&process.nextTick?process.nextTick:function(e){setTimeout(e,0)},nodeify.extend=extend,nodeify.Promise=NodeifyPromise,NodeifyPromise.prototype=Object.create(Promise.prototype),NodeifyPromise.prototype.constructor=NodeifyPromise;var util=require("util"),errors={};util.inherits(UnexpectedServerResponseError,Error),errors.UnexpectedServerResponseError=UnexpectedServerResponseError,util.inherits(NoAuthenticationTokens,Error),errors.NoAuthenticationTokens=NoAuthenticationTokens,util.inherits(MissingEndpointIdAsAdmin,Error),errors.MissingEndpointIdAsAdmin=MissingEndpointIdAsAdmin,util.inherits(UnparseableResponse,Error),errors.UnparseableResponse=UnparseableResponse,util.inherits(SocketErrorResponseFromServer,Error),errors.SocketErrorResponseFromServer=SocketErrorResponseFromServer;var events=require("events"),util=require("util"),request=require("request"),io=require("socket.io-client"),debug=require("debug")("respoke-client"),_=require("lodash"),url=require("url");util.inherits(Client,events.EventEmitter);

return function(ctx, cb) {
	var Respoke = Client;

	var respoke = new Respoke({
		appId: ctx.data.my_respoke_app,
		"App-Secret": ctx.data.my_respoke_secret
	});

	respoke.auth.endpoint({
		endpointId: ctx.data.endpointId
	}, function(err, response) {
		if (err) {
			return cb(err);
		}
		return cb(err, { tokenId: response.tokenId });
	});
};
